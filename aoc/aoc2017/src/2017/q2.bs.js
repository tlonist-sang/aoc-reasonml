// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Js_int = require("bs-platform/lib/js/js_int.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");

var input = Belt_Array.map(Fs.readFileSync("input/q2in.txt", "utf8").split("\n"), (function (row) {
        return row.split("\t");
      }));

var len = input.length;

function getIntValue(input) {
  if (input !== undefined) {
    return input;
  } else {
    return 0;
  }
}

function calculate_min_max_diff(arr) {
  var len = arr.length;
  for(var i = 0; i < len; ++i){
    var input = Belt_Array.get(arr, i);
    var arri = input !== undefined ? input : 0;
    console.log("=============");
    console.log(i);
    console.log(arri);
    console.log(Js_int.min);
    console.log(Js_int.max);
    console.log("=============");
    if (arri > Js_int.min) {
      console.log("max-printing");
      var max_value = (Js_int.min - Js_int.min | 0) + arri | 0;
      console.log(max_value);
    } else {
      console.log("max-printing");
      console.log(Js_int.min);
    }
    if (arri < Js_int.max) {
      console.log("min-printing");
      var min_value = (Js_int.max - Js_int.max | 0) + arri | 0;
      console.log(min_value);
    } else {
      console.log("min-printing");
      console.log(Js_int.max);
    }
  }
  return Js_int.min - Js_int.max | 0;
}

var test = calculate_min_max_diff([
      1,
      2,
      3,
      4
    ]);

console.log(test);

function solve(arr) {
  if (arr !== undefined) {
    return calculate_min_max_diff(arr);
  } else {
    return 0;
  }
}

function get_rid_of_option(input) {
  if (input !== undefined) {
    return Belt_Array.map(input, Caml_format.caml_int_of_string);
  } else {
    return [];
  }
}

var answer = 0;

exports.input = input;
exports.len = len;
exports.answer = answer;
exports.getIntValue = getIntValue;
exports.calculate_min_max_diff = calculate_min_max_diff;
exports.test = test;
exports.solve = solve;
exports.get_rid_of_option = get_rid_of_option;
/* input Not a pure module */
